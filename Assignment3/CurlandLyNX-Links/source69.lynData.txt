   #[1]RSS

:julianbrowne

     * [2]home
     * [3]archive
     * [4]about
     * [5]contact
     *
     *
     *

   [6]Menu

Popular Picks

     * [7]Brewer's CAP Theorem
     * [8]Planning the Plan
     * [9]The Death of Architecture
     * [10]The Business Alignment Fallacy
     * [11]What would Scooby do?
     * [12]Functional Programming I
     * [13]Functional Programming II
     * [14]The Requirements Delusion
     * [15]SOA Myth and Mystery
     * [16]Space-based Architecture
     * [17]Dijkstra's Shortest Path Calculator
     * [18]Systemic Requirements
     * [19]10 Reasons Change is an Antipattern
     * [20]The Governance Apparition

Categories

     * [21]development
     * [22]architecture
     * [23]business
     * [24]humour
     * [25]delivery
     * [26]strategy
     * [27]requirements
     * [28]governance
     * [29]gadget
     * [30]template
     * [31]other

@home

recent posts

     * [32]

The Competence Debt

May 03, 2014
       I just finished reading The Hard Thing About Hard Things by Ben
       Horowitz. As technology management books go it’s by far the most
       refreshing, honest and illuminating thing I have read in years. I
       strongly recommend buying the book. The profits go to a good cause
       too. I didn’t know much about Ben Horowitz, other than an awareness
       that he’s half of the VC power duo Andreessen-Horowitz, but he
       clearly deserves all the plaudits he gets. Plus he’s likes rap
       music and, in additio
     * [33]

Software Economics

December 03, 2013
       Software projects cost a lot of money. Some of them stretch to sums
       that would have made Howard Hughes cry like a two-year-old being
       babysat by Marilyn Manson. It’s lucky that so many are funded by
       big companies and government institutions with deep,
       continuously-filled, pockets because otherwise nothing would ever
       get finished. Yet a lot of very good software is also cheap, even
       free. Part of the reason projects are expensive is because
       businesses view software in all the wrong ways and pa
     * [34]

No More Rock Stars

October 29, 2013
       When I was seventeen I bought a stack of Lou Reed records. I didn’t
       really know that much about Lou Reed but there was this girl. And
       she really liked him. And I really liked her. So I needed to get
       into Lou Reed quickly. I started where everyone starts with Lou
       reed - the 1972 classic Transformer) - by any standards an
       impeccable piece of work with its heady mix of brash sexual
       metaphors and delicate vocals. Then I explored forwards through his
       catalogue and backwards into Velvet Undergrou
     * [35]

The Lean Architect

March 18, 2013
       Anyone who’s soaked their head in agile techniques for a while
       can’t help but become a little obsessed by the concept of ”lean”.
       Behind all the fine words they’re essentially the same thing - a
       quest to discover ways of delivering with the minimum amount of
       waste: stand-ups instead of meetings, cards instead of
       documentation, conversations instead of process, value instead of
       activities. We’ve come a long way in the years since the manifesto
       - these days I fin
     * [36]

The Big Data Deception

February 10, 2013
       You can’t go to a conference, read a blog (ahem) or open a tech mag
       without someone talking about Big Data these days. Now I’m as
       excited the next person whenever new techniques, approaches, tools,
       frameworks, whatever come along, but equally, given our industry’s
       penchant for hype, it’s important to keep one eye out for denuded
       emperors keen to show off their new wardrobe or vendors with sales
       targets to hit. About three seconds after it was announced that
       Barack Obama h
     * [37]

The Inevitability of Evil

February 07, 2013
       Google’s code of conduct begins with the phrase “Don’t be evil”. If
       you work for, or with, Google you’re meant to follow the code.
       Google’s management enforce the code to the extent that you’re even
       protected from retaliation if you blow the whistle on someone who
       is being evil. I have a pet peeve with codes of conduct, missions
       statements, HR policies and (my favourite) architectural
       principles. They nearly always state the bleeding obvious as if itR

     * [38]

The Grand High Order of the Easter Bunny

September 01, 2012
       I ‘ve talked, rather a lot, about my views on the use of open
       source software in the big fat corporate enterprise. Because these
       rambles have been at conferences or in occasional blog posts, the
       pitch has been aimed at enterprise developers: Use open-source
       where you can, but do not think of it simply as a “free” resource;
       give something back to community through promoting it, patching it,
       extending it and paying for support. Everyone wins. The argument is
       partly idealistic
     * [39]

The New New Tool

November 05, 2011
       Bob and Alice sit in a cubicle at the end of the floor. For much of
       their working day they are pissed off. They are forced to do their
       job using a tool implemented by The Project some years ago. The
       Tool was an over-complex inappropriate hulk when it was selected.
       The Tool is made by The Big Vendor. We’ve all heard of The Big
       Vendor. They market The Tool to many industry segments and have a
       specialist pre-sales team for each segment. The Tool was very
       expensive. Because of its complexity it
     * [40]

NoSQL in the Enterprise

July 30, 2011
       Welcome to part two. Last time we looked at the experience of
       getting a NoSQL product accepted in an enterprise environment.
       Assuming you got through that, the next step is to do something
       useful with it. Like any tool, you will only get good stuff out if
       you know how make the best of it. In this case that means not
       treating it too much like a relational database and understanding
       the internal nuances. For our particular set of requirements we
       chose MongoDB. We tried Oracle first but either the
     * [41]

Freedom from the Tyranny of Schemas

July 30, 2011
       Time flies - it was nearly two years ago that I wrote ’Strained
       Relationships’, an article extolling the potential benefits of
       NoSQL data stores. My main point then, and now, was that certain
       features of the new wave of non-relational products looked a
       promising solution (in part) to improving speed-of-change in large
       enterprises. Sadly, too many articles in the NoSQL space still
       focus their attention on drooling fanboi speed and whilst it’s true
       that NoSQL products are generall

   © [42]Copyleft Julian Browne 2014

References

   Visible links
   1. http://feeds.feedburner.com/julianbrownerecent
   2. file:///
   3. file:///article/archive
   4. file:///article/viewer/about
   5. file:///contact
   6. file:///home/mgomez/CS432/A3/source69.txt
   7. file:///article/viewer/brewers-cap-theorem
   8. file:///article/viewer/planning-the-plan
   9. file:///article/viewer/death-of-architecture
  10. file:///article/viewer/business-alignment-fallacy
  11. file:///article/viewer/scooby-doo
  12. file:///article/viewer/fp-pt1
  13. file:///article/viewer/fp-pt2
  14. file:///article/viewer/the-requirements-delusion
  15. file:///article/viewer/soa-myths
  16. file:///article/viewer/space-based-architecture-example
  17. file:///article/viewer/shortest-path
  18. file:///article/viewer/systemic-requirements
  19. file:///article/viewer/change-antipattern
  20. file:///article/viewer/governance-apparition
  21. file:///article/category/development
  22. file:///article/category/architecture
  23. file:///article/category/business
  24. file:///article/category/humour
  25. file:///article/category/delivery
  26. file:///article/category/strategy
  27. file:///article/category/requirements
  28. file:///article/category/governance
  29. file:///article/category/gadget
  30. file:///article/category/template
  31. file:///article/category/other
  32. file:///article/viewer/competence-debt
  33. file:///article/viewer/software-economics
  34. file:///article/viewer/rockstars
  35. file:///article/viewer/the-lean-architect
  36. file:///article/viewer/big-data-deception
  37. file:///article/viewer/inevitability-of-evil
  38. file:///article/viewer/easter-bunny
  39. file:///article/viewer/the-new-new-tool
  40. file:///article/viewer/nosql-in-the-enterprise
  41. file:///article/viewer/freedom-from-the-tyranny-of-schemas
  42. http://en.wikipedia.org/wiki/Copyleft

   Hidden links:
  44. http://feeds.feedburner.com/julianbrownerecent
  45. https://twitter.com/julianbrowne
  46. https://github.com/julianbrowne
